<?xml version="1.0"?>
<odoo>
    <record model="ir.module.category" id="module_category_grant_voucher">
        <field name="name">Grant and Voucher</field>
        <field name="sequence">143</field>
    </record>
    <!--    <record id="group_grant_voucher_admin" model="res.groups">-->
    <!--        <field name="name">Admin</field>-->
    <!--        <field name="sequence">2</field>-->
    <!--        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>-->
    <!--    </record>-->

    <record id="group_grant_voucher_bda" model="res.groups">
        <field name="name">BDA</field>
        <field name="sequence">4</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_fa" model="res.groups">
        <field name="name">Finance Admin</field>
        <field name="sequence">4</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_bdo" model="res.groups">
        <field name="name">BDO</field>
        <field name="sequence">6</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_pc_bc" model="res.groups">
        <field name="name">PC/BC</field>
        <field name="sequence">8</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_bgarg" model="res.groups">
        <field name="name">BGARC</field>
        <field name="sequence">10</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_hogac" model="res.groups">
        <field name="name">HOGAC</field>
        <field name="sequence">12</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_bcs" model="res.groups">
        <field name="name">BCS</field>
        <field name="sequence">14</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>


    <record id="group_grant_voucher_qao" model="res.groups">
        <field name="name">QAO</field>
        <field name="sequence">16</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_edm" model="res.groups">
        <field name="name">EDM</field>
        <field name="sequence">18</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_sp" model="res.groups">
        <field name="name">Service Provider(SP)</field>
        <field name="sequence">20</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_ro" model="res.groups">
        <field name="name">Redemption Officer/ Manager(RO)</field>
        <field name="sequence">20</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_ra" model="res.groups">
        <field name="name">Redemption Administrator(RA)</field>
        <field name="sequence">20</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_sp_admin" model="res.groups">
        <field name="name">Service Provider Network Administrator(SP Admin)</field>
        <field name="sequence">22</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_hod" model="res.groups">
        <field name="name">Head of Department(HOD)</field>
        <field name="sequence">24</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_bscvp" model="res.groups">
        <field name="name">Manager BSCVP</field>
        <field name="sequence">26</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_ea" model="res.groups">
        <field name="name">External Auditor</field>
        <field name="sequence">28</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>

    <record id="group_grant_voucher_ia" model="res.groups">
        <field name="name">Internal Auditor</field>
        <field name="sequence">30</field>
        <field name="category_id" ref="nyda_grant_and_voucher.module_category_grant_voucher"/>
    </record>



    <!--@@@@@@@@@@@@@@@@FOR GRANT APPLICATION RECORD RULES@@@@@@@@@@@@@@@@@@@@@@@@-->

    <record id="bda_access_status_rule" model="ir.rule">
        <field name="name">See only BDA allowed records</field>
        <field ref="model_grant_application" name="model_id"/>
        <field name="domain_force">[('branch_id', '=', user.branch_id.id)]
        </field>
        <!--<field name="domain_force">[('status', 'in',
            ('new','inspected','ict_checked','approved','reject','sent_approval_letter','send_letter', 'uploaded_approval_letter',
            'bdo_review', 'branch_manager_review', 'aftercare', 'completed', 'reject')), ('grant_threshold', 'in',
            ('threshold_1','threshold_2','threshold_3','threshold_4'))]
        </field>-->
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_bda'))]"/>
    </record>
    <record id="bda_access_preassessment_status_rule" model="ir.rule">
        <field name="name">See only BDA allowed records</field>
        <field ref="model_client_preassessment" name="model_id"/>
        <field name="domain_force">[('branch_id', '=', user.branch_id.id)]
        </field>
        <!--<field name="domain_force">[('status', 'in',
            ('new','inspected','ict_checked','approved','reject','sent_approval_letter','send_letter', 'uploaded_approval_letter',
            'bdo_review', 'branch_manager_review', 'aftercare', 'completed', 'reject')), ('grant_threshold', 'in',
            ('threshold_1','threshold_2','threshold_3','threshold_4'))]
        </field>-->
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_bda'))]"/>
    </record>

    <record id="bdo_access_status_rule" model="ir.rule">
        <field name="name">See only BDO status allowed records</field>
        <field ref="model_grant_application" name="model_id"/>
        <field name="domain_force">[('branch_id', '=', user.branch_id.id)]
        </field>
        <field name="implied_ids" eval="[(4, ref('nyda_grant_and_voucher.group_grant_voucher_bgarg'))]"/>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_bdo'))]"/>
    </record>
    <record id="bdo_access_preassessment_status_rule" model="ir.rule">
        <field name="name">See only BDO status allowed records</field>
        <field ref="model_client_preassessment" name="model_id"/>
        <field name="domain_force">[('branch_id', '=', user.branch_id.id)]
        </field>
        <field name="implied_ids" eval="[(4, ref('nyda_grant_and_voucher.group_grant_voucher_bgarg'))]"/>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_bdo'))]"/>
    </record>

    <record id="bgarg_access_status_rule" model="ir.rule">
        <field name="name">BGARC Allowed records</field>
        <field ref="model_grant_application" name="model_id"/>
        <field name="domain_force">[('status', 'in', ('investment_memo_upload', 'approved', 'uploaded_approval_letter','send_letter',
            'bgarg_review', 'hogac_review', 'reject')),('is_bgarg','=','True'),('branch_id', '=', user.branch_id.id)]
        </field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_bgarg'))]"/>
    </record>

    <record id="hogac_access_status_rule" model="ir.rule">
        <field name="name">State visble for HOGAC</field>
        <field ref="model_grant_application" name="model_id"/>
        <field name="domain_force">[('status', 'in', ('bgarg_review', 'hogac_review', 'approved','sent_approval_letter', 'send_letter',
            'uploaded_approval_letter', 'reject')),('is_hogarg','=','True'),('branch_id', '=', user.branch_id.id)]
        </field>
        <!-- <field name="domain_force">[('status', 'in', ('deligence_done', 'approved', 'uploaded_approval_letter')),('grant_amount_required','&gt;',100001)]</field> -->
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_hogac'))]"/>
    </record>

    <record id="bcs_access_status_rule" model="ir.rule">
        <field name="name">BCS state visibility</field>
        <field ref="model_grant_application" name="model_id"/>
        <field name="domain_force">[('status', 'in', ('uploaded_approval_letter','disbursement', 'bcs_approved', 'send_letter',
            'edm_approved','approved','aftercare', 'reject')),('branch_id', '=', user.branch_id.id)]
        </field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_bcs'))]"/>
    </record>

    <record id="qao_access_status_rule" model="ir.rule">
        <field name="name">QAO Approval records</field>
        <field ref="model_grant_application" name="model_id"/>
        <field name="domain_force">[('status', 'in', ('bcs_approved', 'qao_approved', 'reject')),('branch_id', '=', user.branch_id.id)]</field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_qao'))]"/>
    </record>

    <record id="edm_access_status_rule" model="ir.rule">
        <field name="name">EDM Approval</field>
        <field ref="model_grant_application" name="model_id"/>
        <field name="domain_force">[('status', 'in', ('qao_approved', 'edm_approved', 'reject'),('branch_id', '=', user.branch_id.id))]</field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_edm'))]"/>
    </record>

    <record id="benificiary_grant_access_record_rule" model="ir.rule">
        <field name="name">Benificiary sees only his own record in grant</field>
        <field ref="model_grant_application" name="model_id"/>
        <field name="domain_force">[('user_id', '=', user.id)]</field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('client_management.group_branch_beneficiary'))]"/>
    </record>

    <record id="cm_branch_manager_grant_access_record_rule" model="ir.rule">
        <field name="name">branch manager of CM sees only his own record in grant</field>
        <field ref="model_grant_application" name="model_id"/>
        <field name="domain_force">[('status', 'in', ('uploaded_approval_letter','bdo_review', 'branch_manager_review',
            'disbursement', 'reject'))]
        </field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('client_management.group_branch_manager'))]"/>
    </record>

    <record id="cm_coordinator_grant_access_record_rule" model="ir.rule">
        <field name="name">coordinator of CM sees only his own record in grant</field>
        <field ref="model_grant_application" name="model_id"/>
        <field name="domain_force">[('grant_threshold', 'in', ['threshold_4']), ('status', 'in',
            ('new','inspected','ict_checked','deligence_done','investment_memo_upload','sent_approval_letter','uploaded_approval_letter', 'send_letter',
            'bdo_review', 'branch_manager_review','bgarg_review', 'approved', 'aftercare', 'completed', 'reject'))]
        </field>
        <field name="implied_ids" eval="[(4, ref('nyda_grant_and_voucher.group_grant_voucher_bgarg'))]"/>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('client_management.group_coordinator'))]"/>
    </record>


    <!--^^^^^^^^^^^^^^^^^^^FOR VOUCHER APPLICATION RECORD RULES^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-->

    <record id="benificiary_voucher_access_record_rule" model="ir.rule">
        <field name="name">Benificiary sees only his own record in voucher</field>
        <field ref="model_voucher_application" name="model_id"/>
        <field name="domain_force">[('user_id', '=', user.id)]</field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('client_management.group_branch_beneficiary'))]"/>
    </record>


    <record id="bda_access_record_rule" model="ir.rule">
        <field name="name">BDA sees Voucher Application records of his own branch</field>
        <field ref="model_voucher_application" name="model_id"/>
        <field name="domain_force">[('branch_id', '=', user.branch_id.id)]</field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_bda'))]"/>
    </record>


    <record id="bdo_access_record_rule" model="ir.rule">
        <field name="name">BDO Only sees records of his branch</field>
        <field ref="model_voucher_application" name="model_id"/>
        <field name="domain_force">[('status', '!=', 'new'),('branch_id', '=', user.branch_id.id)]</field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_bdo'))]"/>
    </record>

    <record id="pc_bc_access_record_rule" model="ir.rule">
        <field name="name">PC BC Sees all records</field>
        <field ref="model_voucher_application" name="model_id"/>
        <field name="domain_force">[]</field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="1"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="1"/>
        <field name="groups" eval="[(4, ref('group_grant_voucher_pc_bc'))]"/>
    </record>

    <record id="partner_service_provider_access_record_rule" model="ir.rule">
        <field name="name">Partner/Service Provider Sees Only his Voucher records</field>
        <field ref="model_voucher_application" name="model_id"/>
        <field name="domain_force">[('partner_user_id','=',user.id)]</field>
        <field name="perm_write" eval="1"/>
        <field name="perm_create" eval="0"/>
        <field name="perm_read" eval="1"/>
        <field name="perm_unlink" eval="0"/>
        <field name="groups" eval="[(4, ref('client_management.group_partner_service_provider'))]"/>
    </record>

    <record id="beneficiary_rule" model="ir.rule">
        <field name="name">Beneficiary Rule(Voucher)</field>
        <field name="model_id" ref="nyda_grant_and_voucher.model_voucher_application"/>
        <field name="domain_force">[('beneficiary_id.user_id', '=', user.id)]</field>
        <field name="groups" eval="[(4,ref('client_management.group_branch_beneficiary'))]"/>
    </record>


</odoo>
